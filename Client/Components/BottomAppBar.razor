@attribute [Authorize]
@inject StateAccessService stateAccess
@implements IDisposable;

@if (_state is not null)
{
    if (_state.Member is not null)
    {
        <MudAppBar Bottom="true" Fixed="true" Color="Color.Primary" Elevation="1" Dense="true">

            <MudText>@_state.Member.FirstName  @_state.Member.LastName</MudText>
            <MudSpacer />

            <MudText Style="@_style">Admin</MudText>
            <MudSpacer />
            <MudButton Variant="Variant.Filled" Color="Color.Primary" EndIcon="@Icons.Material.Filled.Logout" Href="/.auth/logout" DisableElevation="true" Size="Size.Large"></MudButton>
        </MudAppBar>
    }
}

@code {
    StateAccessService? _state;
    bool _drawerOpen = true;
    string _style = String.Empty;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnInitializedAsync()
    {
        _state = stateAccess;
    }

    protected void AdminVisible()
    {
        if (_state is not null && _state.Member is not null && _state.Member.IsAdmin == true)
        {
            _style = "display:none;";
        }
    }

    void IDisposable.Dispose()
    {
        _state = null;
    }
}

