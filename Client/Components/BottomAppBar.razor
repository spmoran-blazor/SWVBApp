@attribute [Authorize]
@using Microsoft.AspNetCore.Components.Authorization
@inject StateAccessService state
@inject IHttpClientFactory factory
@inject NavigationManager navigation
@implements IDisposable;

@if (_state is not null)
{
    if (_state.Member is not null)
    {
        <MudAppBar Bottom="true" Fixed="true" Elevation="2" Dense="true" style="@_style">
            <MudChip Icon="@Icons.Filled.Person"> @_state.Member.FirstName  @_state.Member.LastName</MudChip>
            <MudSpacer />
            <MudChip Variant="Variant.Outlined" @onclick="BeginSignOut" Size="Size.Medium" Icon="@Icons.Material.Outlined.Logout" Color="Color.Primary">Logout</MudChip>  @*Href="@_redirect"*@
        </MudAppBar>
    }
}

@code {
    StateAccessService? _state;
    HttpClient? _http;
    NavigationManager _nav;
    Member? _currentMember;
    private string _redirect;
    private string _style = "background-color:#ffffff;color:#594ae2ff";

    protected override async Task OnInitializedAsync()
    {
        state.OnStateChange += StateHasChanged;
        _state = state;
        _http = factory.CreateClient("DataAccessHttpClient");
        _nav = navigation;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            if (_state is not null)
            {
                _currentMember = _state.Member;
            }
        }
    }

    private void BeginSignOut(MouseEventArgs args)
    {
        _nav.NavigateTo("/.auth/logout", true);
    }

    void IDisposable.Dispose()
    {
        _state = null;
    }
}