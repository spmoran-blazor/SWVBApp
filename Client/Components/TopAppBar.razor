@inject StateAccessService state

@if(_member is not null)
{
    <MudAppBar Color="Color.Primary" Fixed="true" Elevation="0">
        @switch (Action)
        {
            case null:
                <MudText Typo="Typo.h5">Navigation Center</MudText>
                break;
            case "0":
                <MudText Typo="Typo.h5">Message Center</MudText>
                break;
            case "1":
                <MudText Typo="Typo.h5">Game Center</MudText>
                break;
            case "2":
                <MudText Typo="Typo.h5">Profile Center</MudText>
                break;
            case "3":
                <MudText Typo="Typo.h5">Availability Center</MudText>
                break;
            case "4":
                <MudText Typo="Typo.h5">Exceptions Center</MudText>
                break;
            default:
                <MudText Typo="Typo.h5">Navigation Center</MudText>
                break;
        }
        <MudSpacer />
        <MudIconButton Icon="@Icons.Filled.Home" Size="Size.Large" Color="Color.Inherit" DisableElevation="true" Href="/" />

    </MudAppBar>
}


@code {

    [Parameter]
    public string? Action { get; set; }

    public StateAccessService? _state;
    public Member? _member;

    protected override async Task OnInitializedAsync()
    {
        _state = state;
        _state.OnStateChange += StateHasChanged;
        _member = _state.Member ?? null;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            if (Action is not null)
            {
                _member = _state.Member ?? null;
            }
        }
    }
}
