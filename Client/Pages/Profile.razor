@page "/profile"
@attribute [Authorize]
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Http
@using System.Security.Claims
@using Microsoft.Graph
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
<h1>Hello, @user.Identity.Name</h1>
@code {
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
    private string _authMessage;
    private string _userId;
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();
    private ClaimsPrincipal user;
    protected override async Task OnParametersSetAsync()
    {
        await GetClaimsPrincipalData();
        await base.OnParametersSetAsync();
    }

    private async Task GetClaimsPrincipalData()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        //if (user.Identity.IsAuthenticated)
        //{
        //    //_authMessage = $"{user.Identity.Name} is authenticated.";
        //    //_claims = user.Claims;
        //    //_userId = $"User Id: {user.FindFirst(c => c.Type == "sub")?.Value}";
        //}
        //else
        //{
        //    _authMessage = "The user is NOT authenticated.";
        //}
    }
}

